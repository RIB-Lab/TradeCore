plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "io.freefair.lombok" version "6.6.1"
}

group = 'net.riblab'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "commandapi"
        url = "https://raw.githubusercontent.com/JorelAli/CommandAPI/mvn-repo/"
    }
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://repo.codemc.io/repository/maven-snapshots/' }
    maven { url 'https://nexus.frengor.com/repository/public/' }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    implementation 'dev.jorel:commandapi-bukkit-shade:9.0.3'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.11.3'
    implementation 'com.github.Exlll.ConfigLib:configlib-yaml:v4.2.0'
    compileOnly "org.projectlombok:lombok:1.18.24"
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    implementation 'dev.triumphteam:triumph-gui:3.1.4'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'
    implementation(fileTree(dir: 'libs', include: ['mobchip-bukkit-*.jar']))
    compileOnly(fileTree(dir: 'libs', include: ['UltimateAdvancementAPI-*.jar']))

    implementation(platform("com.intellectualsites.bom:bom-newest:1.34"))
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit") { transitive = false }
    implementation "io.papermc:paperlib:1.0.7"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'de.tr7zw.nbtapi', 'net.riblab.tradecore.nbtapi'
    relocate 'dev.jorel.commandapi', 'net.riblab.tradecore.commandapi'
    relocate 'de.exlll.configlib', 'net.riblab.tradecore.configlib'
    relocate 'dev.triumphteam.gui', 'net.riblab.tradecore.gui'
    exclude 'me/gamercoder215/mobchip/abstraction/v1_13_R1/*'
    exclude 'me/gamercoder215/mobchip/abstraction/v1_16_R1/*'
    exclude 'me/gamercoder215/mobchip/abstraction/v1_16_R2/*'
    exclude 'me/gamercoder215/mobchip/abstraction/v1_18_R1/*'
    relocate 'me.gamercoder215.mobchip', 'net.riblab.tradecore.mobchip'
    relocate "io.papermc.lib", "net.riblab.tradecore.paperlib"
}

//Disable jar and replace with shadowJar
jar.enabled = false
assemble.dependsOn(shadowJar)